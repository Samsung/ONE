name: Run ONERT Ubuntu Build

on:
  push:
    branches:
      - master
      - release/*
    paths:
      - '.github/workflows/run-onert-build.yml'
      - 'nn*'
      - 'Makefile.template'
      - 'infra/buildtool/**'
      - 'infra/cmake/**'
      - 'infra/nncc/**'
      - 'infra/nnfw/**'
      - 'runtime/**'
      - '!runtime/contrib/**'
      - '!**/*.md'
  pull_request:
    branches:
      - master
      - release/*
    paths:
      - '.github/workflows/run-onert-build.yml'
      - 'nn*'
      - 'Makefile.template'
      - 'infra/buildtool/**'
      - 'infra/cmake/**'
      - 'infra/nncc/**'
      - 'infra/nnfw/**'
      - 'runtime/**'
      - '!runtime/contrib/**'
      - '!**/*.md'

defaults:
  run:
    shell: bash

# Cancel previous running jobs when pull request is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    if: github.repository_owner == 'Samsung'
    strategy:
      # Not debug build test on aarch64
      matrix:
        type: [ debug, release ]
        ubuntu_code: [ jammy ]
        arch: [ x86_64, aarch64 ]
    runs-on: ${{ matrix.arch == 'x86_64' && 'one-x64-linux' || 'one-arm-linux' }}
    container:
      image: nnfw/one-devtools:${{ matrix.ubuntu_code }}-test
      options: --user root
    env:
      TARGET_ARCH: ${{ matrix.arch }}
      BUILD_TYPE: ${{ matrix.type }}
      OPTIONS: "-DBUILD_ARMCOMPUTE=OFF" # Disable arm compute library
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Caching externals
        uses: actions/cache@v4
        with:
          path: externals
          key: external-onert-${{ matrix.ubuntu_code }}-${{ hashFiles('infra/cmake/packages/**/*.cmake') }}-${{ hashFiles('infra/nnfw/cmake/packages/**/*.cmake') }}
          restore-keys: |
            external-onert-${{ matrix.ubuntu_code }}-
            external-onert-
            external-

      - name: Build onert
        run: |
          make -f Makefile.template

      - name: Run test on native
        run: |
          ./Product/out/test/onert-test unittest
          ./Product/out/test/onert-test unittest --unittestdir=./Product/out/nnapi-gtest

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: matrix.type == 'release'
        with:
          name: onert-${{ matrix.arch }}-${{ matrix.ubuntu_code }}
          path: Product/out/test-suite.tar.gz
          retention-days: ${{ github.event_name == 'pull_request' && '3' || '7' }}
