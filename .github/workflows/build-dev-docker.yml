name: Build docker image for CI/CD infra on PR
on:
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/build-dev-docker.yml'
      - 'infra/docker/**'

# Cancel previous running jobs when pull request is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  filtering:
    runs-on: ubuntu-latest
    outputs:
      yml: ${{ steps.filter.outputs.yml }}
      android: ${{ steps.filter.outputs.android }}
      ubuntu: ${{ steps.filter.outputs.ubuntu }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            android:
              - '.github/**'
              - 'infra/docker/android-sdk/**'
            ubuntu:
              - '.github/**'
              - 'infra/docker/focal/**'
              - 'infra/docker/jammy/**'
              - 'infra/docker/noble/**'

  # Build on docker CLI for PR test without login
  build-ubuntu:
    needs: filtering
    if: github.repository_owner == 'Samsung' && needs.filtering.outputs.ubuntu == 'true'
    runs-on: one-x64-linux
    strategy:
      matrix:
        version: [ 'focal', 'jammy', 'noble' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          ./nnas build-docker-image --codename ${{ matrix.version }} --tag one-test

      - name: Test onert build
        env:
          DOCKER_IMAGE_NAME: one-test
        run: |
          ./nnas docker-run --user make -f Makefile.template
          ./nnas docker-run --user Product/out/test/onert-test unittest

  build-android:
    needs: filtering
    if: github.repository_owner == 'Samsung' && needs.filtering.outputs.android == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          ./nnas build-docker-image --codename android-sdk --tag one-test

      - name: Test onert build
        env:
          DOCKER_IMAGE_NAME: one-test
          DOCKER_ENV_VARS: '-e CROSS_BUILD=1 -e TARGET_OS=android -e BUILD_TYPE=release'
        run: |
          ./nnas docker-run --user make -f Makefile.template
