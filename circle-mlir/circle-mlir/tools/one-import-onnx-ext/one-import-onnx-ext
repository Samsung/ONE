#!/usr/bin/env bash
''''export SCRIPT_PATH="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" >/dev/null && pwd)" # '''
''''export PY_PATH=${SCRIPT_PATH}/venv/bin/python                                                  # '''
''''test -f ${PY_PATH} && exec ${PY_PATH} "$0" "$@"                                                # '''
''''echo "Error: Virtual environment not found. Please run 'one-prepare-venv' command."            # '''
''''exit 255                                                                                       # '''

# Copyright (c) 2025 Samsung Electronics Co., Ltd. All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# refer https://github.com/Samsung/ONE/issues/10702 for this file
# this file follows one-cmds script structure

import os
import sys
import subprocess


def main():
    dir_path = os.path.dirname(os.path.realpath(__file__))
    o2c_path = os.path.join(dir_path, 'onnx2circle')
    o2c_cmd = [o2c_path]
    leng = len(sys.argv)
    # add only supported options, or onnx2circle will exit with help message.
    for i in range(1, leng):
        option = sys.argv[i]
        if option.startswith('--'):
            valid_options = [
                '--unroll_rnn', '--unroll_lstm',
                '--experimental_disable_batchmatmul_unfold',
                '--save_intermediate', '--keep_io_order'
            ]
            if not option in valid_options:
                print('[one-import-onnx-ext] skip unknown option:', option)
                continue

        o2c_cmd.append(option)

    print('[one-import-onnx-ext] from Circle-MLIR:', o2c_cmd)
    subprocess.run(o2c_cmd, check=True)


if __name__ == '__main__':
    main()
