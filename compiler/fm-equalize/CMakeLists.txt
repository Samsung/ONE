unset(FM_EQUALIZE_DEPS)

###
### Set up fm-equalize executable
###
set(FM_EQUALIZE_FILE "fm-equalize")
set(FM_EQUALIZE_SRC "${CMAKE_CURRENT_SOURCE_DIR}/${FM_EQUALIZE_FILE}")
set(FM_EQUALIZE_BIN "${CMAKE_CURRENT_BINARY_DIR}/${FM_EQUALIZE_FILE}")

add_custom_command(OUTPUT ${FM_EQUALIZE_BIN}
  COMMAND ${CMAKE_COMMAND} -E copy "${FM_EQUALIZE_SRC}" "${FM_EQUALIZE_BIN}"
  DEPENDS ${FM_EQUALIZE_SRC}
  COMMENT "Generate ${FM_EQUALIZE_BIN}"
)

list(APPEND FM_EQUALIZE_DEPS ${FM_EQUALIZE_BIN})

###
### Create fmelib directory
###
set(FM_EQUALIZE_PYTHON_DIR "fmelib")
set(FM_EQUALIZE_PYTHON_DIR_BIN "${CMAKE_CURRENT_BINARY_DIR}/${FM_EQUALIZE_PYTHON_DIR}")

add_custom_command(OUTPUT ${FM_EQUALIZE_PYTHON_DIR_BIN}
  COMMAND ${CMAKE_COMMAND} -E make_directory "${FM_EQUALIZE_PYTHON_DIR_BIN}"
  COMMENT "Generate ${FM_EQUALIZE_PYTHON_DIR_BIN}"
)

list(APPEND FM_EQUALIZE_DEPS ${FM_EQUALIZE_PYTHON_DIR_BIN})


###
### Set up Python files under fmelib
###
file(GLOB_RECURSE FM_EQUALIZE_PYTHON_FILES "${FM_EQUALIZE_PYTHON_DIR}/*.py")

foreach(FM_EQUALIZE_PYTHON_FILE IN ITEMS ${FM_EQUALIZE_PYTHON_FILES})
  get_filename_component(FILE_NAME ${FM_EQUALIZE_PYTHON_FILE} NAME)
  set(FM_EQUALIZE_PYTHON_FILE_SRC "${CMAKE_CURRENT_SOURCE_DIR}/${FM_EQUALIZE_PYTHON_DIR}/${FILE_NAME}")
  set(FM_EQUALIZE_PYTHON_FILE_BIN "${CMAKE_CURRENT_BINARY_DIR}/${FM_EQUALIZE_PYTHON_DIR}/${FILE_NAME}")

  add_custom_command(OUTPUT ${FM_EQUALIZE_PYTHON_FILE_BIN}
    COMMAND ${CMAKE_COMMAND} -E copy "${FM_EQUALIZE_PYTHON_FILE_SRC}" "${FM_EQUALIZE_PYTHON_FILE_BIN}"
    DEPENDS ${FM_EQUALIZE_PYTHON_SRC}
    COMMENT "Generate ${FM_EQUALIZE_PYTHON_FILE_BIN}"
  )

  list(APPEND FM_EQUALIZE_DEPS ${FM_EQUALIZE_PYTHON_FILE_BIN})
endforeach(FM_EQUALIZE_PYTHON_FILE)

add_custom_target(${FM_EQUALIZE_FILE} ALL DEPENDS ${FM_EQUALIZE_DEPS})

install(FILES ${FM_EQUALIZE_FILE}
        PERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE
                    GROUP_READ GROUP_EXECUTE
                    WORLD_READ WORLD_EXECUTE
        DESTINATION bin)

install(DIRECTORY ${FM_EQUALIZE_PYTHON_DIR}
        FILE_PERMISSIONS OWNER_WRITE OWNER_READ
                          GROUP_READ
                          WORLD_READ
        DESTINATION bin)

# TODO separate test to another module so that we can remove depends of common-artifacts
#      if we are to include fm-equalize to release set
if(NOT ENABLE_TEST)
  return()
endif(NOT ENABLE_TEST)

set(VIRTUALENV "${NNCC_OVERLAY_DIR}/venv")

add_test(
  NAME fm-equalize_unittest
  COMMAND ${VIRTUALENV}/bin/python -m unittest
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)
