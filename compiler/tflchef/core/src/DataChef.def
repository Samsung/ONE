#ifndef DATA_CHEF
#error "Define DATA_CHEF first"
#endif // DATA_CHEF

// DATA_CHEF(TYPE, NAME, FACTORY_CLASS)
//  "TYPE" SHOULD BE an enum tag of tflchef::TensorType
DATA_CHEF(FLOAT32, constant, ConstantDataChefFactory<float>)
DATA_CHEF(BOOL, constant, ConstantDataChefFactory<bool>)
DATA_CHEF(UINT8, constant, ConstantDataChefFactory<uint8_t>)
DATA_CHEF(INT8, constant, ConstantDataChefFactory<int8_t>)
DATA_CHEF(INT16, constant, ConstantDataChefFactory<int16_t>)
DATA_CHEF(INT32, constant, ConstantDataChefFactory<int32_t>)
DATA_CHEF(INT64, constant, ConstantDataChefFactory<int64_t>)
DATA_CHEF(INT64, explicit, ExplicitDataChefFactory<int64_t>)
DATA_CHEF(INT32, explicit, ExplicitDataChefFactory<int32_t>)
DATA_CHEF(INT16, explicit, ExplicitDataChefFactory<int16_t>)
DATA_CHEF(INT8, explicit, ExplicitDataChefFactory<int8_t>)
DATA_CHEF(UINT8, explicit, ExplicitDataChefFactory<uint8_t>)
DATA_CHEF(BOOL, explicit, ExplicitDataChefFactory<bool>)
DATA_CHEF(FLOAT32, explicit, ExplicitDataChefFactory<float>)
DATA_CHEF(STRING, explicit, ExplicitDataChefFactory<std::string>)
DATA_CHEF(FLOAT32, gaussian, GaussianFloat32DataChefFactory)
DATA_CHEF(INT32, gaussian, GaussianInt32DataChefFactory)
DATA_CHEF(INT16, gaussian, GaussianInt16DataChefFactory)
DATA_CHEF(INT8, gaussian, GaussianInt8DataChefFactory)
DATA_CHEF(UINT8, gaussian, GaussianUint8DataChefFactory)

// INT4 support only for constant, explicit as int8_t
DATA_CHEF(INT4, constant, ConstantInt4DataChefFactory)
DATA_CHEF(INT4, explicit, ExplicitInt4DataChefFactory)

// FLOAT16 support for only gaussian, explicit for now
DATA_CHEF(FLOAT16, explicit, ExplicitFloat16DataChefFactory)
DATA_CHEF(FLOAT16, gaussian, GaussianFloat16DataChefFactory)
