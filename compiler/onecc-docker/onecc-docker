#!/usr/bin/env python3

# Copyright (c) 2022 Samsung Electronics Co., Ltd. All Rights Reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import subprocess
import json
import os
import requests
import argparse


def _run(cmd, is_shell=False):
    result = subprocess.run(
        cmd, shell=is_shell, stdout=subprocess.PIPE, stderr=subprocess.PIPE).stdout
    return result


def _image_exists(name):
    cmd = ['docker', 'images', '-q', name]
    lines = _run(cmd).splitlines()
    return bool(lines)


def main():
    script_path = os.getcwd()

    TAG_URL = "https://api.github.com/repos/Samsung/ONE/releases/latest"
    try:
        response = requests.get(TAG_URL)
    except requests.exceptions.RequestException as e:
        raise SystemExit(e)

    versions_str = response.content
    versions_json = json.loads(versions_str)
    recent_version = versions_json["tag_name"]

    image_name = f"onecc:{recent_version}"
    build_arg = f"VERSION={recent_version}"

    if not _image_exists(image_name):
        build_cmd = [
            "docker", "build", "-t", image_name, "--build-arg", build_arg, script_path
        ]
        _run(build_cmd)

    contianer_name = f"onecc_{recent_version.replace('.','_')}"
    user_cmd = ''.join(sys.argv[1:])

    run_cmd = [
        "docker", "run", "--rm", "-u", "$(id -u):$(id -g)"
        "--name", contianer_name, "-v", "${HOME}:${HOME}", "-e", "HOME=${HOME}", "-w",
        "${PWD}", image_name, user_cmd
    ]

    cmd = ' '.join(run_cmd)
    output = _run(cmd, is_shell=True)

    print(output.decode('utf-8'), end='')


if __name__ == "__main__":
    main()
