function(_Xnnpack_Build)
  nnas_find_package(XnnpackSource QUIET)
  nnfw_find_package(Fxdiv QUIET)
  nnfw_find_package(CpuInfo QUIET)
  nnfw_find_package(Pthreadpool QUIET)
  nnfw_find_package(Fp16 QUIET)

  # NOTE This line prevents multiple definitions of cpuinfo target
  if(TARGET XNNPACK)
    set(XnnpackSource_DIR ${XnnpackSource_DIR} PARENT_SCOPE)
    set(Xnnpack_FOUND TRUE PARENT_SCOPE)
    return()
  endif(TARGET XNNPACK)

  if(NOT XnnpackSource_FOUND)
    message(STATUS "XNNPACK: Source not found")
    set(Xnnpack_FOUND FALSE PARENT_SCOPE)
    return()
  endif(NOT XnnpackSource_FOUND)

  set(XNNPACK_LIBRARY_TYPE "static")
  set(XNNPACK_BUILD_TESTS OFF CACHE BOOL "Build XNNPACK unit tests")
  set(XNNPACK_BUILD_BENCHMARKS OFF CACHE BOOL "Build XNNPACK benchmarks")
  set(XNNPACK_USE_SYSTEM_LIBS ON CACHE BOOL "Use system-provided dependency libraries")

  # microkernel build is not supported under gcc 9.x and clang
  # TODO Enable this
if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 10.0 OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  set(XNNPACK_ENABLE_ASSEMBLY OFF CACHE BOOL "Build XNNPACK with assembly micro-kernels")
  set(XNNPACK_ENABLE_ARM_I8MM OFF CACHE BOOL "Build XNNPACK with ARM I8MM (8-bit integer matrix multiply accumulate) micro-kernels")
  # Set definition: used on patched code
  add_compile_definitions("XNN_ENABLE_ASSEMBLY=$<BOOL:${XNNPACK_ENABLE_ASSEMBLY}>")
endif()

  # Set -fPIC property to XNNPack and linked libraries
  set(CMAKE_POSITION_INDEPENDENT_CODE ON)

  add_extdirectory("${XnnpackSource_DIR}" XNNPACK EXCLUDE_FROM_ALL)
  # Suppress warnings generated by xnnpack
  set_target_properties(XNNPACK PROPERTIES COMPILE_FLAGS "-Wno-deprecated-declarations")
  set(XnnpackSource_DIR ${XnnpackSource_DIR} PARENT_SCOPE)
  set(Xnnpack_FOUND TRUE PARENT_SCOPE)
endfunction(_Xnnpack_Build)

string(REGEX REPLACE "-flto" "" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
string(REGEX REPLACE "-flto" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")

if(BUILD_XNNPACK)
  _Xnnpack_Build()
else(BUILD_XNNPACK)
  set(Xnnpack_FOUND FALSE)
endif(BUILD_XNNPACK)
