if(BUILD_TENSORFLOW_LITE_2_2_0)
  macro(return_unless VAR)
  if(NOT ${VAR})
    message("${VAR} NOT TRUE")
    set(TensorFlowLite_2_2_0_FOUND PARENT_SCOPE)
    return()
  endif(NOT ${VAR})
  endmacro(return_unless)

  nnas_include(ExternalSourceTools)
  nnas_include(OptionTools)

  # Below urls come from https://github.com/tensorflow/tensorflow/blob/v2.2.0/tensorflow/lite/tools/make/Makefile

  set(absl_url "https://github.com/abseil/abseil-cpp/archive/43ef2148c0936ebf7cb4be6b19927a9d9d145b8f.tar.gz")
  ExternalSource_Download("tflite220_Absl" ${absl_url})
  set(TFLite220AbslSource_DIR "${tflite220_Absl_SOURCE_DIR}")
  if (NOT TFLite220AbslSource_DIR STREQUAL "")
    set(TFLite220AbslSource_FOUND TRUE)
  endif()
  return_unless(TFLite220AbslSource_FOUND)

  set(eigen_url "https://gitlab.com/libeigen/eigen/-/archive/52a2fbbb008a47c5e3fb8ac1c65c2feecb0c511c/eigen-52a2fbbb008a47c5e3fb8ac1c65c2feecb0c511c.tar.gz")
  ExternalSource_Download("tflite220_Eigen" ${eigen_url})
  set(TFLite220EigenSource_DIR "${tflite220_Eigen_SOURCE_DIR}")
  if (NOT TFLite220EigenSource_DIR STREQUAL "")
    set(TFLite220EigenSource_FOUND TRUE)
  endif()
  return_unless(TFLite220EigenSource_FOUND)

  set(farmhash_url "https://storage.googleapis.com/mirror.tensorflow.org/github.com/google/farmhash/archive/816a4ae622e964763ca0862d9dbd19324a1eaf45.tar.gz")
  ExternalSource_Download("tflite220_Farmhash" ${farmhash_url})
  set(TFLite220FarmhashSource_DIR "${tflite220_Farmhash_SOURCE_DIR}")
  if (NOT TFLite220FarmhashSource_DIR STREQUAL "")
    set(TFLite220FarmhashSource_FOUND TRUE)
  endif()
  return_unless(TFLite220FarmhashSource_FOUND)

  set(fft2d_url "https://storage.googleapis.com/mirror.tensorflow.org/www.kurims.kyoto-u.ac.jp/~ooura/fft2d.tgz")
  ExternalSource_Download("tflite220_FFT2D" ${fft2d_url})
  set(TFLite220FFT2DSource_DIR "${tflite220_FFT2D_SOURCE_DIR}")
  if (NOT TFLite220FFT2DSource_DIR STREQUAL "")
    set(TFLite220FFT2DSource_FOUND TRUE)
  endif()
  return_unless(TFLite220FFT2DSource_FOUND)

  set(flatbuffers_url "https://storage.googleapis.com/mirror.tensorflow.org/github.com/google/flatbuffers/archive/v1.11.0.tar.gz")
  ExternalSource_Download("tflite220_FlatBuffers" ${flatbuffers_url})
  set(TFLite220FlatBuffersSource_DIR "${tflite220_FlatBuffers_SOURCE_DIR}")
  if (NOT TFLite220FlatBuffersSource_DIR STREQUAL "")
    set(TFLite220FlatBuffersSource_FOUND TRUE)
  endif()
  return_unless(TFLite220FlatBuffersSource_FOUND)

  set(fp16_url "https://github.com/Maratyszcza/FP16/archive/febbb1c163726b5db24bed55cc9dc42529068997.zip")
  ExternalSource_Download("tflite220_FP16" ${fp16_url})
  set(TFLite220FP16Source_DIR "${tflite220_FP16_SOURCE_DIR}")
  if (NOT TFLite220FP16Source_DIR STREQUAL "")
    set(TFLite220FP16Source_FOUND TRUE)
  endif()
  return_unless(TFLite220FP16Source_FOUND)

  set(gemmlowp_url "https://storage.googleapis.com/mirror.tensorflow.org/github.com/google/gemmlowp/archive/12fed0cd7cfcd9e169bf1925bc3a7a58725fdcc3.zip")
  ExternalSource_Download("tflite220_GEMMLowp" ${gemmlowp_url})
  set(TFLite220GEMMLowpSource_DIR "${tflite220_GEMMLowp_SOURCE_DIR}")
  if (NOT TFLite220GEMMLowpSource_DIR STREQUAL "")
    set(TFLite220GEMMLowpSource_FOUND TRUE)
  endif()
  return_unless(TFLite220GEMMLowpSource_FOUND)

  set(neon2sse_url "https://github.com/intel/ARM_NEON_2_x86_SSE/archive/master.zip")
  ExternalSource_Download("tflite220_NEON2SSE" ${neon2sse_url})
  set(TFLite220NEON2SSESource_DIR "${tflite220_NEON2SSE_SOURCE_DIR}")
  if (NOT TFLite220NEON2SSESource_DIR STREQUAL "")
    set(TFLite220NEON2SSESource_FOUND TRUE)
  endif()
  return_unless(TFLite220NEON2SSESource_FOUND)

  set(tensorflow_url "https://github.com/tensorflow/tensorflow/archive/v2.2.0.tar.gz")
  ExternalSource_Download("tflite220_TensorFlow" ${tensorflow_url})
  set(TFLite220TensorFlowSource_DIR "${tflite220_TensorFlow_SOURCE_DIR}")
  if (NOT TFLite220TensorFlowSource_DIR STREQUAL "")
    set(TFLite220TensorFlowSource_FOUND TRUE)
  endif()
  return_unless(TFLite220TensorFlowSource_FOUND)

  nnas_include(ExternalProjectTools)
  add_extdirectory("${CMAKE_CURRENT_LIST_DIR}/TensorFlowLite-2.2.0" tflite-2.2.0)

  set(TensorFlowLite_2_2_0_FOUND TRUE)
  return()
endif()
