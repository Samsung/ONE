<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
  "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/">
  <!-- org.tizen.npud.core:
       @short_description: Npud interface

       The interface used to run AI models on npu devices.
  -->
  <interface name="org.tizen.npud.core">
    <!--
      device_get_available_list:
      @error: The error status of the function.

      Get all available npu device lists.
    -->
    <method name="device_get_available_list">
	    <arg name="error" type="i" direction="out"  />
    </method>
    <!--
      context_create:
      @device_id: The device numger to use.
      @priority: The device priority.
      @ctx: The Context handle.
      @error: The error status of the function.

      Create context.
    -->
    <method name="context_create">
      <arg name="device_id" type="i" direction="in" />
      <arg name="priority" type="i" direction="in" />
      <arg name="ctx" type="t" direction="out" />
      <arg name="error" type="i" direction="out"  />
    </method>
    <!--
      context_destroy:
      @ctx: The Context handle to destroy.
      @error: The error status of the function.

      Destroy context.
    -->
    <method name="context_destroy">
	    <arg name="ctx" type="t" direction="in"  />
	    <arg name="error" type="i" direction="out"  />
    </method>
    <!--
      buffers_create:
      @ctx: The Context handle.
      @buffers: The array of buffer structure. (i:type, t:address, u:size)
      @out_buffers: The array of buffer sturcture containing created buffer address.
      @error: The error status of the function.

      Create buffer array.
    -->
    <method name="buffers_create">
      <arg name="ctx" type="t" direction="in" />
      <arg name="buffers" type="a(itu)" direction="in" />
      <arg name="out_buffers" type="a(itu)" direction="out" />
      <arg name="error" type="i" direction="out" />
    </method>
    <!--
      buffers_destroy:
      @ctx: The Context handle.
      @buffers: The array of buffer structure. (i:type, t:address, u:size)
      @error: The error status of the function.

      Destroy buffer array.
    -->
    <method name="buffers_destroy">
      <arg name="ctx" type="t" direction="in" />
      <arg name="buffers" type="a(itu)" direction="in" />
      <arg name="error" type="i" direction="out" />
    </method>
    <!--
      network_create:
      @ctx: The context handle.
      @model_path: The model path to run.
      @nw_handle: The Network handle.
      @error: The error status of the function.

      Create network.

      TODO Support file descriptor input
    -->
    <method name="network_create">
      <arg name="ctx" type="t" direction="in" />
      <arg name="model_path" type="s" direction="in"  />
      <arg name="nw_handle" type="u" direction="out"  />
      <arg name="error" type="i" direction="out"  />
    </method>
    <!--
      network_destroy:
      @ctx: The context handle.
      @nw_handle: The Network handle.
      @error: The error status of the function.

      Destroy network.
    -->
    <method name="network_destroy">
      <arg name="ctx" type="t" direction="in" />
      <arg name="nw_handle" type="u" direction="in" />
      <arg name="error" type="i" direction="out"  />
    </method>
    <!--
      request_create:
      @ctx: The context handle.
      @nw_handle: The Network handle.
      @rq_handle: The Request handle.
      @error: The error status of the function.

      Create request.
    -->
    <method name="request_create">
      <arg name="ctx" type="t" direction="in" />
      <arg name="nw_handle" type="u" direction="in" />
      <arg name="rq_handle" type="u" direction="out" />
      <arg name="error" type="i" direction="out" />
    </method>
    <!--
      request_destroy:
      @ctx: The context handle.
      @rq_handle: The Request handle.
      @error: The error status of the function.

      Destroy request.
    -->
    <method name="request_destroy">
      <arg name="ctx" type="t" direction="in" />
      <arg name="rq_handle" type="u" direction="in" />
      <arg name="error" type="i" direction="out" />
    </method>
    <!--
      request_set_data:
      @ctx: The context handle.
      @rq_handle: The Request handle.
      @input_buffers: The input buffer datas.
      @output_buffers: The output buffer datas.
      @error: The error status of the function.

      Set request data.
    -->
    <method name="request_set_data">
      <arg name="ctx" type="t" direction="in" />
      <arg name="rq_handle" type="u" direction="in" />
      <arg name="input_buffers" type="a(itu)" direction="in" />
      <arg name="output_buffers" type="a(itu)" direction="in" />
      <arg name="error" type="i" direction="out" />
    </method>
    <!--
      execute_run:
      @ctx: The context handle.
      @rq_handle: The Request handle.
      @error: The error status of the function.

      Execute run.
    -->
    <method name="execute_run">
	    <arg name="ctx" type="t" direction="in"  />
	    <arg name="rq_handle" type="u" direction="in"  />
	    <arg name="error" type="i" direction="out"  />
    </method>
  </interface>
</node>
